#0Y |CHARSET|::|UTF-8|
(|COMMON-LISP|::|LET*| ((#1=#:|G4018| |CLOS|::|<STANDARD-CLASS>|))
 (|COMMON-LISP|::|APPLY| #'|CLOS|::|ENSURE-CLASS| '|COMMON-LISP-USER|::|GRAPH|
  :|DIRECT-SUPERCLASSES| (|COMMON-LISP|::|LIST|) :|DIRECT-SLOTS|
  (|COMMON-LISP|::|LIST|
   (|COMMON-LISP|::|LIST| :|NAME| '|COMMON-LISP-USER|::|EDGES| :|READERS|
    '(|COMMON-LISP-USER|::|EDGES|) :|WRITERS|
    '((|COMMON-LISP|::|SETF| |COMMON-LISP-USER|::|EDGES|)) :|INITARGS|
    '(:|EDGES|))
   (|COMMON-LISP|::|LIST| :|NAME| '|COMMON-LISP-USER|::|NODES| :|READERS|
    '(|COMMON-LISP-USER|::|NODES|) :|WRITERS|
    '((|COMMON-LISP|::|SETF| |COMMON-LISP-USER|::|NODES|)) :|INITARGS|
    '(:|NODES|)))
  :|METACLASS| #1#
  (|COMMON-LISP|::|APPEND| '(:|FIXED-SLOT-LOCATIONS| |COMMON-LISP|::|NIL|)
   (|COMMON-LISP|::|LIST| :|DIRECT-DEFAULT-INITARGS| |COMMON-LISP|::|NIL|
    :|DOCUMENTATION| |COMMON-LISP|::|NIL| :|GENERIC-ACCESSORS|
    '|COMMON-LISP|::|T|))))
(|SYSTEM|::|C-DEFUN| '|COMMON-LISP-USER|::|EDGES|
 #(1. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|SYSTEM|::|C-DEFUN| '(|COMMON-LISP|::|SETF| |COMMON-LISP-USER|::|EDGES|)
 #(2. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|SYSTEM|::|C-DEFUN| '|COMMON-LISP-USER|::|NODES|
 #(1. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|SYSTEM|::|C-DEFUN| '(|COMMON-LISP|::|SETF| |COMMON-LISP-USER|::|NODES|)
 #(2. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|SYSTEM|::|C-DEFUN| '|CLOS|::|PRINT-OBJECT|
 #(2. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|SYSTEM|::|C-DEFUN| '|COMMON-LISP-USER|::|MAKE-GRAPH|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|COMMON-LISP-USER|::|EDGES| |COMMON-LISP-USER|::|NODES|)))
(|SYSTEM|::|C-DEFUN| '|COMMON-LISP-USER|::|IOTA|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|COMMON-LISP-USER|::|N| |COMMON-LISP|::|&OPTIONAL|
    (|COMMON-LISP-USER|::|START| 0.) (|COMMON-LISP|::|STEP| 1.))))
(|SYSTEM|::|C-DEFUN| '|COMMON-LISP-USER|::|SORT-NODES|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '(|COMMON-LISP-USER|::|LIST-EDGES|)))
(|SYSTEM|::|C-DEFUN| '|COMMON-LISP-USER|::|DELETE-DOUBLE|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '(|COMMON-LISP-USER|::|LIST-EDGES|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|COMMON-LISP-USER|::|MAKE-EDGES-ORIENTED|)
(|SYSTEM|::|%PUTD| '|COMMON-LISP-USER|::|MAKE-EDGES-ORIENTED|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |COMMON-LISP-USER|::|MAKE-EDGES-ORIENTED|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|PROPER-LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 3.
       3.))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|COMMON-LISP-USER|::|NB-NODES|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|COMMON-LISP|::|EXP| (|COMMON-LISP|::|CADDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |COMMON-LISP-USER|::|MAKE-EDGES-ORIENTED|
       (|COMMON-LISP|::|WHEN| (|COMMON-LISP|::|SYMBOLP| |COMMON-LISP|::|EXP|)
        (|COMMON-LISP|::|SETF| |COMMON-LISP|::|EXP|
         (|COMMON-LISP|::|EVAL| |COMMON-LISP|::|EXP|)))
       `(|COMMON-LISP|::|LOOP| |COMMON-LISP-USER|::|WITH|
         |COMMON-LISP-USER|::|N| |COMMON-LISP|::|=|
         ,|COMMON-LISP-USER|::|NB-NODES| |COMMON-LISP-USER|::|FOR|
         |COMMON-LISP-USER|::|I| |COMMON-LISP-USER|::|FROM| 1.
         |COMMON-LISP-USER|::|TO| ,|COMMON-LISP-USER|::|NB-NODES|
         |COMMON-LISP|::|NCONC|
         (|COMMON-LISP|::|LOOP| |COMMON-LISP-USER|::|FOR|
          |COMMON-LISP-USER|::|J| |COMMON-LISP-USER|::|FROM| 1.
          |COMMON-LISP-USER|::|TO| ,|COMMON-LISP-USER|::|NB-NODES|
          |COMMON-LISP|::|UNLESS|
          (|COMMON-LISP|::|=| |COMMON-LISP-USER|::|I| |COMMON-LISP-USER|::|J|)
          |COMMON-LISP|::|WHEN| ,|COMMON-LISP|::|EXP|
          |COMMON-LISP-USER|::|COLLECT|
          (|COMMON-LISP|::|LIST| |COMMON-LISP-USER|::|I|
           |COMMON-LISP-USER|::|J|))))))))
  '(|COMMON-LISP-USER|::|NB-NODES| |COMMON-LISP|::|EXP|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS|
 '|COMMON-LISP-USER|::|MAKE-EDGES-UNORIENTED|)
(|SYSTEM|::|%PUTD| '|COMMON-LISP-USER|::|MAKE-EDGES-UNORIENTED|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |COMMON-LISP-USER|::|MAKE-EDGES-UNORIENTED|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|PROPER-LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 3.
       3.))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|COMMON-LISP-USER|::|NB-NODES|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|COMMON-LISP-USER|::|EXPRESSION| (|COMMON-LISP|::|CADDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |COMMON-LISP-USER|::|MAKE-EDGES-UNORIENTED|
       `(|COMMON-LISP|::|SORT|
         (|COMMON-LISP-USER|::|DELETE-DOUBLE|
          (|COMMON-LISP-USER|::|SORT-NODES|
           (|COMMON-LISP-USER|::|MAKE-EDGES-ORIENTED|
            ,|COMMON-LISP-USER|::|NB-NODES|
            ,|COMMON-LISP-USER|::|EXPRESSION|)))
         #'|COMMON-LISP-USER|::|TEST|))))))
  '(|COMMON-LISP-USER|::|NB-NODES| |COMMON-LISP-USER|::|EXPRESSION|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|COMMON-LISP-USER|::|TO-GRAPH-ORIENTED|)
(|SYSTEM|::|%PUTD| '|COMMON-LISP-USER|::|TO-GRAPH-ORIENTED|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |COMMON-LISP-USER|::|TO-GRAPH-ORIENTED|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|PROPER-LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 3.
       3.))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|COMMON-LISP-USER|::|NB-NODES|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|COMMON-LISP-USER|::|EXPRESSIONS| (|COMMON-LISP|::|CADDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |COMMON-LISP-USER|::|TO-GRAPH-ORIENTED|
       `(|COMMON-LISP-USER|::|MAKE-GRAPH|
         (|COMMON-LISP-USER|::|MAKE-EDGES-ORIENTED|
          ,|COMMON-LISP-USER|::|NB-NODES| ,|COMMON-LISP-USER|::|EXPRESSIONS|)
         (|COMMON-LISP-USER|::|MAKE-NODES|
          ,|COMMON-LISP-USER|::|NB-NODES|)))))))
  '(|COMMON-LISP-USER|::|NB-NODES| |COMMON-LISP-USER|::|EXPRESSIONS|)))
(|SYSTEM|::|C-DEFUN| '|COMMON-LISP-USER|::|SORT-EDGES|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '(|COMMON-LISP-USER|::|LIST-EDGES|)))
(|SYSTEM|::|C-DEFUN| '|COMMON-LISP-USER|::|TEST|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|COMMON-LISP-USER|::|LIST1| |COMMON-LISP-USER|::|LIST2|)))
(|SYSTEM|::|C-DEFUN| '|COMMON-LISP-USER|::|MAKE-NODES|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '(|COMMON-LISP-USER|::|NB-NODES|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|COMMON-LISP-USER|::|TO-GRAPH-UNORIENTED|)
(|SYSTEM|::|%PUTD| '|COMMON-LISP-USER|::|TO-GRAPH-UNORIENTED|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |COMMON-LISP-USER|::|TO-GRAPH-UNORIENTED|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|PROPER-LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 3.
       3.))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|COMMON-LISP-USER|::|NB-NODES|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|COMMON-LISP-USER|::|EXPRESSIONS| (|COMMON-LISP|::|CADDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |COMMON-LISP-USER|::|TO-GRAPH-UNORIENTED|
       `(|COMMON-LISP-USER|::|MAKE-GRAPH|
         (|COMMON-LISP-USER|::|MAKE-EDGES-UNORIENTED|
          ,|COMMON-LISP-USER|::|NB-NODES| ,|COMMON-LISP-USER|::|EXPRESSIONS|)
         (|COMMON-LISP-USER|::|MAKE-NODES|
          ,|COMMON-LISP-USER|::|NB-NODES|)))))))
  '(|COMMON-LISP-USER|::|NB-NODES| |COMMON-LISP-USER|::|EXPRESSIONS|)))
(|SYSTEM|::|C-PROCLAIM|
 '(|COMMON-LISP|::|SPECIAL| |COMMON-LISP-USER|::|*CYCLE*|))
(|SYSTEM|::|C-PROCLAIM| '(|COMMON-LISP|::|SPECIAL| |COMMON-LISP-USER|::|*PN*|))
(|SYSTEM|::|C-PROCLAIM| '(|COMMON-LISP|::|SPECIAL| |COMMON-LISP-USER|::|*KN*|))
(|SYSTEM|::|C-PROCLAIM|
 '(|COMMON-LISP|::|SPECIAL| |COMMON-LISP-USER|::|*EMPTY*|))
(|SYSTEM|::|C-PROCLAIM|
 '(|COMMON-LISP|::|SPECIAL| |COMMON-LISP-USER|::|*TEST1*|))
(|SYSTEM|::|C-PROCLAIM|
 '(|COMMON-LISP|::|SPECIAL| |COMMON-LISP-USER|::|*TEST2*|))
(|SYSTEM|::|C-PROCLAIM|
 '(|COMMON-LISP|::|SPECIAL| |COMMON-LISP-USER|::|*TEST3*|))
(|SYSTEM|::|C-PROCLAIM|
 '(|COMMON-LISP|::|SPECIAL| |COMMON-LISP-USER|::|*NOT*|))
